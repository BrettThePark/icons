!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("@pxblue/ng-progress-icons",["exports","@angular/core","@angular/common"],e):e((t.pxblue=t.pxblue||{},t.pxblue["ng-progress-icons"]={}),t.ng.core,t.ng.common)}(this,function(t,e,r){"use strict";var n=function(){function t(){}return t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[]},t.ngInjectableDef=e.defineInjectable({factory:function(){return new t},token:t,providedIn:"root"}),t}(),i=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:e.Component,args:[{selector:"progress-ng-progress-icons",template:"\n    <p>\n      ng-progress-icons works!\n    </p>\n  ",styles:[]}]}],t.ctorParameters=function(){return[]},t}(),s=function(t,e,r){return Math.max(e,Math.min(t,r))},a=function(t,e){return void 0===e&&(e=12),{x:e+e*Math.cos(t/100*2*Math.PI),y:e+e*Math.sin(t/100*2*Math.PI)}},o=function(){function t(){this.percent=100,this.size=24,this.charging=!1,this.outlined=!1,this.basePath="M20,10V8.3C20,7.6,19.4,7,18.7,7H3.3C2.6,7,2,7.6,2,8.3v7.3C2,16.4,2.6,17,3.3,17h15.3c0.7,0,1.3-0.6,1.3-1.3V14h2v-4H20z",this.chargePath="M20,10V8.33a1.319,1.319,0,0,0-1-1.263A1.257,1.257,0,0,0,18.67,7H3.34A1.338,1.338,0,0,0,2,8.33v7.33A1.338,1.338,0,0,0,3.33,17H18.67a1.257,1.257,0,0,0,.33-.067,1.319,1.319,0,0,0,1-1.263V14h2V10Zm-8.5,3v2L4,11H9.5V9L17,13Z",this.outlinedPath="M18,9v6H4V9H18m.7-2H3.3A1.324,1.324,0,0,0,2,8.3v7.3A1.347,1.347,0,0,0,3.3,17H18.6a1.324,1.324,0,0,0,1.3-1.3V14h2V10H20V8.3A1.324,1.324,0,0,0,18.7,7Z",this.baseID="pxb-battery-clip",this.chargeID="pxb-battery-clip-charge",this.rv=s}return t.prototype.ngOnInit=function(){this.maskIDleft="maskLeft-"+this.percent,this.maskIDright="maskRight-"+this.percent,this.startX=this.outlined?3.9:2,this.fillWidth=this.outlined?14.2:18},t.prototype.getBasepath=function(){return this.outlined?this.outlinedPath:this.basePath},t.prototype.getClipPath=function(){return this.charging?this.chargePath:this.basePath},t.prototype.getID=function(){return this.charging?this.chargeID:this.baseID},t.decorators=[{type:e.Component,args:[{selector:"battery-progress",template:'\n    <svg [attr.height]="size+\'px\'" [attr.width]="size+\'px\'" x="0px" y="0px" viewBox="0 0 24 24" style="enable-background:new 0 0 24 24;" xml:space="preserve"> \n    \n    <defs>\n      <mask *ngIf = "outlined " [attr.id]="maskIDleft">\n        <rect width="100%" height="100%" fill="white" />\n        <polygon fill="black" points="11.5,13 11.5,15 4,11 9.5,11 9.5,9 17,13 " />\n      </mask>\n      <mask *ngIf = "outlined " [attr.id]="maskIDright">\n        <rect width="100%" height="100%" fill="white" />\n        <rect [attr.x]="startX" y="7" fill="black"  [attr.width]="rv(percent/100*fillWidth, 0, 100)" height="10" />\n      </mask>\n    </defs>\n    <path [attr.fill]="color || \'currentColor\'"  [attr.fill-opacity]="(outlined || percent >= 100) ? \'1\' : \'0.3\'" [attr.clip-path]="\'url(#\' + getID() + \')\'" [attr.d]="getBasepath()"/>\n      <clipPath [id]="getID()">\n        <path overflow="visible" [attr.d]="getClipPath()"/>\n      </clipPath>\n      <g  [attr.fill]= "color || \'currentColor\'">\n      \n<rect [attr.fill]="color || \'currentColor\'" [attr.x]="startX" y="7" [attr.clip-path]="\'url(#\' + getID() + \')\'" [attr.width]="rv(percent/100*fillWidth, 0, 100)" height="10"  [attr.mask]="outlined && charging ? \'url(#\' + maskIDleft + \')\' : null"/>\n<polygon  *ngIf = "outlined && charging" points="11.5,13 11.5,15 4,11 9.5,11 9.5,9 17,13" [attr.mask]="\'url(#\' + maskIDright + \')\'" />\n      </g>\n    </svg>\n  ',styles:[],inputs:["percent","size","color","charging","outlined"]}]}],t.ctorParameters=function(){return[]},t}(),h=function(){function t(){this.percent=100,this.size=24,this.outlined=!1,this.basePath="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z",this.outlinedPath="M16.5,5A3.462,3.462,0,0,1,20,8.5c0,2.885-3.125,5.725-7.856,10.024l-.035.032-.1.094-.124-.113C7.135,14.234,4,11.391,4,8.5A3.462,3.462,0,0,1,7.5,5a3.96,3.96,0,0,1,2.977,1.387L12,8.175l1.523-1.788A3.96,3.96,0,0,1,16.5,5m0-2A5.988,5.988,0,0,0,12,5.09,5.988,5.988,0,0,0,7.5,3,5.447,5.447,0,0,0,2,8.5c0,3.78,3.4,6.86,8.55,11.53L12,21.35l1.45-1.31C18.6,15.36,22,12.28,22,8.5A5.447,5.447,0,0,0,16.5,3Z",this.rv=s}return t.prototype.ngOnInit=function(){this.startY=this.outlined?19.45:21.35,this.startX=this.outlined?14.55:18.35},t.prototype.getPath=function(){return this.outlined?this.outlinedPath:this.basePath},t.decorators=[{type:e.Component,args:[{selector:"heart-progress",template:'\n    <svg [attr.height]="size+\'px\'" [attr.width]="size+\'px\'" x="0px" y="0px" viewBox="0 0 24 24" style="enable-background:new 0 0 24 24;" xml:space="preserve">\n      <path [attr.fill]="color || \'currentColor\'" [attr.fill-opacity]="(outlined || percent >= 100) ? \'1\' : \'0.3\'" [attr.d]="getPath()"/>\n      <clipPath id="pxb-heart-clip">\n        <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>\n      </clipPath>\n      <rect [attr.fill]="color || \'currentColor\'" clip-path="url(#pxb-heart-clip)" x="2" [attr.y]="startY-(rv(percent,0,100))*startX/100" width="20" height="20" />\n    </svg>\n  ',styles:[],inputs:["percent","size","color","outlined"]}]}],t.ctorParameters=function(){return[]},t}(),l=function(){function t(){this.percent=100,this.size=24,this.ring=10,this.outlined=!1,this.iconStroke=2,this.centerX=12,this.centerY=12,this.outerRadiusLarge=10}return t.prototype.getPath=function(){return"M 12,12 H 24 A 12,12,0,"+(50<=this.percent?1:0)+",1,"+a(this.percent).x+","+a(this.percent).y+"Z"},t.prototype.ngOnInit=function(){this.stroke=Math.max(1,Math.min(10,Math.round(this.ring))),this.stroke=this.outlined?Math.max(this.stroke,2*this.iconStroke+1):this.stroke,this.innerRadiusLarge=10-this.iconStroke,this.outerRadiusSmall=10-this.stroke+this.iconStroke,this.innerRadiusSmall=10-this.stroke,0===this.innerRadiusSmall&&(this.outerRadiusSmall=0),this.outlineBase="\n  M "+this.centerX+" "+(this.centerY-this.outerRadiusLarge)+"\n  A "+this.outerRadiusLarge+" "+this.outerRadiusLarge+" 0 1 0 "+this.centerX+" "+(this.centerY+this.outerRadiusLarge)+"\n  A "+this.outerRadiusLarge+" "+this.outerRadiusLarge+" 0 1 0 "+this.centerX+" "+(this.centerY-this.outerRadiusLarge)+"\n  Z\n  M "+this.centerX+" "+(this.centerY-this.innerRadiusLarge)+"\n  A "+this.innerRadiusLarge+" "+this.innerRadiusLarge+" 0 1 1 "+this.centerX+" "+(this.centerY+this.innerRadiusLarge)+"\n  A "+this.innerRadiusLarge+" "+this.innerRadiusLarge+" 0 1 1 "+this.centerX+" "+(this.centerY-this.innerRadiusLarge)+"\n  Z\n  M "+this.centerX+" "+(this.centerY-this.outerRadiusSmall)+"\n  A "+this.outerRadiusSmall+" "+this.outerRadiusSmall+" 0 1 0 "+this.centerX+" "+(this.centerY+this.outerRadiusSmall)+"\n  A "+this.outerRadiusSmall+" "+this.outerRadiusSmall+" 0 1 0 "+this.centerX+" "+(this.centerY-this.outerRadiusSmall)+"\n  Z\n  M "+this.centerX+" "+(this.centerY-this.innerRadiusSmall)+"\n  A "+this.innerRadiusSmall+" "+this.innerRadiusSmall+" 0 1 1 "+this.centerX+" "+(this.centerY+this.innerRadiusSmall)+"\n  A "+this.innerRadiusSmall+" "+this.innerRadiusSmall+" 0 1 1 "+this.centerX+" "+(this.centerY-this.innerRadiusSmall)+"\n  Z\n",this.twoToneBase="\nM "+this.centerX+" "+(this.centerY-this.outerRadiusLarge)+"\nA "+this.outerRadiusLarge+" "+this.outerRadiusLarge+" 0 1 0 "+this.centerX+" "+(this.centerY+this.outerRadiusLarge)+"\nA "+this.outerRadiusLarge+" "+this.outerRadiusLarge+" 0 1 0 "+this.centerX+" "+(this.centerY-this.outerRadiusLarge)+"\nZ\n",this.clipPath="\nM12,2\nA10,10,0,1,0,22,12,\n10,10,0,0,0,12,2\nZ\nm0,"+(20-this.stroke)+" \nA "+(10-this.stroke)+","+(10-this.stroke)+",0,1,1,"+(22-this.stroke)+",12,\n"+(10-this.stroke)+","+(10-this.stroke)+",0,0,1,12,"+(22-this.stroke)+"\nZ\n"},t.decorators=[{type:e.Component,args:[{selector:"pie-progress",template:'\n    <svg [attr.height]="size+\'px\'" \n    [attr.width]="size+\'px\'" \n    x="0px" y="0px" \n    viewBox="0 0 24 24" \n    style="transform: rotate(-.25turn)">\n\n      <clipPath [attr.id]="\'pxb-donut-clip-\'+stroke">\n        <path [attr.d]="clipPath"/>\n      </clipPath>\n      <path [attr.clip-path]="\'url(#pxb-donut-clip-\'+stroke+\')\'"\n      [attr.fill]="color || \'currentColor\'" \n      [attr.fill-opacity]="outlined || percent >= 100 ? \'1\' : \'0.3\'"\n      [attr.d]="outlined ? outlineBase : twoToneBase"\n    />\n    <path *ngIf="percent > 0 && percent < 100" \n    [attr.fill]="color || \'currentColor\'" \n    [attr.clip-path]="\'url(#pxb-donut-clip-\'+stroke+\')\'" \n    [attr.d]= "getPath()"  />\n\n      <circle *ngIf="percent === 100 && outlined" [attr.clip-path]="\'url(#pxb-donut-clip-\'+stroke+\')\'" cx="12" cy="12" r="10" [attr.fill]="color || \'currentColor\'"></circle>\n      \n    </svg>\n  ',styles:[],inputs:["percent","size","color","ring","outlined"]}]}],t.ctorParameters=function(){return[]},t}(),c=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[r.CommonModule],declarations:[i,o,h,l],exports:[i,o,h,l]}]}],t}();t.NgProgressIconsService=n,t.NgProgressIconsComponent=i,t.NgProgressIconsModule=c,t.BatteryComponent=o,t.HeartComponent=h,t.PieComponent=l,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=pxblue-ng-progress-icons.umd.min.js.map
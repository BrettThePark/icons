{"version":3,"sources":["ng://@pxblue/ng-progress-icons/lib/ng-progress-icons.service.ts","ng://@pxblue/ng-progress-icons/lib/ng-progress-icons.component.ts","ng://@pxblue/ng-progress-icons/lib/utilities.ts","ng://@pxblue/ng-progress-icons/lib/battery/battery.component.ts","ng://@pxblue/ng-progress-icons/lib/heart/heart.component.ts","ng://@pxblue/ng-progress-icons/lib/pie/pie.component.ts","ng://@pxblue/ng-progress-icons/lib/ng-progress-icons.module.ts"],"names":["NgProgressIconsService","Injectable","args","providedIn","NgProgressIconsComponent","prototype","ngOnInit","Component","selector","template","styles","rangeValue","value","min","max","Math","getCoordinates","percent","radius","x","cos","PI","y","sin","BatteryComponent","this","size","charging","basePath","chargePath","baseID","chargeID","rv","getPath","getID","inputs","HeartComponent","PieComponent","ring","gc","stroke","round","NgProgressIconsModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"kXAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCAAC,EAAA,WAaE,SAAAA,KAKF,OAHEA,EAAAC,UAAAC,SAAA,iCAbDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,6BACVC,SAAU,0DAKVC,OAAQ,6CASVN,EAlBA,GCAaO,EAAU,SAAYC,EAAOC,EAAKC,GAC3C,OAAOC,KAAKD,IAAID,EAAIE,KAAKF,IAAID,EAAME,KAG1BE,EAAc,SAAYC,EAASC,GAC5C,YAD4C,IAAAA,IAAAA,EAAA,IACrC,CACHC,EAAGD,EAAUA,EAASH,KAAKK,IAAMH,EAAQ,IAAO,EAAEF,KAAKM,IACvDC,EAAGJ,EAAUA,EAASH,KAAKQ,IAAMN,EAAQ,IAAO,EAAEF,KAAKM,MCP/DG,EAAA,WA4BE,SAAAA,IAVAC,KAAAR,QAAiB,IACjBQ,KAAAC,KAAc,GAEdD,KAAAE,UAAmB,EAEnBF,KAAAG,SAAW,wHACXH,KAAAI,WAAa,8NACbJ,KAAAK,OAAS,mBACTL,KAAAM,SAAW,0BAcXN,KAAAO,GAAKrB,EAEP,OAZEa,EAAAnB,UAAAC,SAAA,aAGAkB,EAAAnB,UAAA4B,QAAA,WACE,OAAQR,KAAKE,SAAWF,KAAKI,WAAaJ,KAAKG,UAEjDJ,EAAAnB,UAAA6B,MAAA,WACE,OAAQT,KAAKE,SAAWF,KAAKM,SAAWN,KAAKK,4BAlChDvB,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,mBACVC,SAAU,0iBASVC,OAAQ,GACRyB,OAAQ,CAAC,UAAW,OAAQ,QAAS,sDA2BvCX,EA1CA,GCAAY,EAAA,WAqBE,SAAAA,IAHAX,KAAAR,QAAiB,IACjBQ,KAAAC,KAAc,GAOdD,KAAAO,GAAKrB,EAEP,OALEyB,EAAA/B,UAAAC,SAAA,iCApBDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,iBACVC,SAAU,s1BASVC,OAAQ,GACRyB,OAAQ,CAAC,UAAW,OAAQ,mDAa9BC,EA5BA,GCAAC,EAAA,WAuBE,SAAAA,IALAZ,KAAAR,QAAiB,IACjBQ,KAAAC,KAAc,GAEdD,KAAAa,KAAc,GAOdb,KAAAO,GAAKrB,EACLc,KAAAc,GAAKvB,EACP,OALEqB,EAAAhC,UAAAC,SAAA,WACEmB,KAAKe,OAASzB,KAAKD,IAAI,EAAEC,KAAKF,IAAI,GAAIE,KAAK0B,MAAMhB,KAAKa,6BAvBzD/B,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,eACVC,SAAU,g/BASVC,OAAQ,GACRyB,OAAQ,CAAC,UAAW,OAAQ,QAAS,kDAevCE,EA9BA,GCAAK,EAAA,WAOA,SAAAA,KAUqC,2BAVpCC,EAAAA,SAAQzC,KAAA,CAAC,CACR0C,QAAS,CACPC,EAAAA,cAEFC,aAAc,CAAC1C,EAA0BoB,EAAkBY,EAAgBC,GAC3EU,QAAS,CACP3C,EACAoB,EAAkBY,EAAgBC,OAGDK,EAjBrC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgProgressIconsService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'progress-ng-progress-icons',\n  template: `\n    <p>\n      ng-progress-icons works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgProgressIconsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export const rangeValue = function(value, min, max){\n    return Math.max(min,Math.min(value,max))\n}\n\nexport const getCoordinates = function(percent, radius = 12){\n    return {\n        x: radius + (radius * Math.cos( (percent/100) * 2*Math.PI) ),\n        y: radius + (radius * Math.sin( (percent/100) * 2*Math.PI) )\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { rangeValue } from '../utilities';\n\n@Component({\n  selector: 'battery-progress',\n  template: `\n    <svg [attr.height]=\"size+'px'\" [attr.width]=\"size+'px'\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\"> \n    <path [attr.fill]=\"color || 'currentColor'\" fill-opacity=\"0.3\" [attr.d]=\"getPath()\"/>\n      <clipPath [id]=\"getID()\">\n        <path overflow=\"visible\" [attr.d]=\"getPath()\"/>\n      </clipPath> \n      <rect [attr.fill]=\"color || 'currentColor'\" x=\"2\" y=\"7\" [attr.clip-path]=\"'url(#' +getID() +')'\" [attr.width]=\"rv(percent/100*18, 0, 100)\" height=\"10\" />\n    </svg>\n  `,\n  styles: [],\n  inputs: ['percent', 'size', 'color', 'charging']\n})\nexport class BatteryComponent implements OnInit {\n  percent:number = 100;\n  size:number = 24;\n  color:string;\n  charging:boolean = false;\n\n  basePath = 'M20,10V8.3C20,7.6,19.4,7,18.7,7H3.3C2.6,7,2,7.6,2,8.3v7.3C2,16.4,2.6,17,3.3,17h15.3c0.7,0,1.3-0.6,1.3-1.3V14h2v-4H20z';\n  chargePath = 'M20,10V8.33a1.319,1.319,0,0,0-1-1.263A1.257,1.257,0,0,0,18.67,7H3.34A1.338,1.338,0,0,0,2,8.33v7.33A1.338,1.338,0,0,0,3.33,17H18.67a1.257,1.257,0,0,0,.33-.067,1.319,1.319,0,0,0,1-1.263V14h2V10Zm-8.5,3v2L4,11H9.5V9L17,13Z'\n  baseID = 'pxb-battery-clip';\n  chargeID = 'pxb-battery-clip-charge';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getPath(){\n    return (this.charging ? this.chargePath : this.basePath);\n  }\n  getID(){\n    return (this.charging ? this.chargeID : this.baseID);\n  }\n\n  rv = rangeValue;\n\n}","import { Component, OnInit } from '@angular/core';\nimport { rangeValue } from '../utilities';\n\n@Component({\n  selector: 'heart-progress',\n  template: `\n    <svg [attr.height]=\"size+'px'\" [attr.width]=\"size+'px'\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n      <path [attr.fill]=\"color || 'currentColor'\" fill-opacity=\"0.3\" d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/>\n      <clipPath id=\"pxb-heart-clip\">\n        <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/>\n      </clipPath>\n      <rect [attr.fill]=\"color || 'currentColor'\" clip-path=\"url(#pxb-heart-clip)\" x=\"2\" [attr.y]=\"21.35-(rv(percent,0,100))*18.35/100\" width=\"20\" height=\"20\" />\n    </svg>\n  `,\n  styles: [],\n  inputs: ['percent', 'size', 'color']\n})\nexport class HeartComponent implements OnInit {\n  percent:number = 100;\n  size:number = 24;\n  color:string;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  rv = rangeValue;\n\n}","import { Component, OnInit } from '@angular/core';\nimport { rangeValue, getCoordinates } from '../utilities';\n\n@Component({\n  selector: 'pie-progress',\n  template: `\n    <svg [attr.height]=\"size+'px'\" [attr.width]=\"size+'px'\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"transform: rotate(-.25turn)\">\n      <clipPath [attr.id]=\"'pxb-donut-clip-'+stroke\">\n        <path [attr.d]=\"'M12,2A10,10,0,1,0,22,12,10,10,0,0,0,12,2Zm0,' + (20-stroke) +'A' + (20-2*stroke)/2 + ',' + (20-2*stroke)/2 + ',0,1,1,' + (22-stroke) + ',12,' + (20-2*stroke)/2 + ',' + (20-2*stroke)/2 + ',0,0,1,12,' + (22-stroke) + 'Z'\"/>\n      </clipPath>\n      <circle [attr.clip-path]=\"'url(#pxb-donut-clip-'+stroke+')'\" cx=\"12\" cy=\"12\" r=\"10\" [attr.fill]=\"color || 'currentColor'\" [attr.fill-opacity]=\"percent >= 100 ? '1' : '0.3'\"></circle>\n      <path *ngIf=\"rv(percent, 0, 100) > 0 && rv(percent, 0, 100) < 100\" [attr.fill]=\"color || 'currentColor'\" [attr.clip-path]=\"'url(#pxb-donut-clip-'+stroke+')'\" [attr.d]=\"'M 12,12 H 24 A 12,12,0,'+(rv(percent, 0, 100)>=50?1:0)+',1,'+gc(rv(percent, 0, 100))['x']+','+gc(rv(percent, 0, 100))['y']+'Z'\" />\n    </svg>\n  `,\n  styles: [],\n  inputs: ['percent', 'size', 'color', 'ring']\n})\nexport class PieComponent implements OnInit {\n  percent:number = 100;\n  size:number = 24;\n  color:string;\n  ring:number = 10;\n  stroke:number;\n  constructor() { }\n\n  ngOnInit() {\n    this.stroke = Math.max(1,Math.min(10, Math.round(this.ring)));\n  }\n  rv = rangeValue;\n  gc = getCoordinates;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';  \nimport { NgProgressIconsComponent } from './ng-progress-icons.component';\nimport { BatteryComponent } from './battery/battery.component';\nimport { HeartComponent } from './heart/heart.component';\nimport { PieComponent } from './pie/pie.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgProgressIconsComponent, BatteryComponent, HeartComponent, PieComponent],\n  exports: [\n    NgProgressIconsComponent, \n    BatteryComponent, HeartComponent, PieComponent\n  ]\n})\nexport class NgProgressIconsModule { }\n"]}